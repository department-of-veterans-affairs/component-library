# Workflow name
name: 'Chromatic'

# Event for the workflow
on:
  push:
  pull_request:
    types: [opened, synchronize, reopened]

# List of jobs
jobs:
  chromatic-deployment:
    # Operating System
    runs-on: ubuntu-latest
    # Job steps
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Use Node.js 20.x
        uses: actions/setup-node@v2
        with:
          node-version: 20.x
          cache: 'yarn'
      - run: yarn install
      - name: Install dependencies in react-components
        run: yarn install
        working-directory: packages/react-components
      - run: yarn workspace @department-of-veterans-affairs/react-components run build
      - run: yarn workspace @department-of-veterans-affairs/web-components run build
      - run: yarn workspace @department-of-veterans-affairs/component-library run build
      - name: Chromatic Preview Format Branch Name
        id: chromatic-format-branch-name
        run: |
          # Get the current branch name
          BRANCH_NAME=$(git rev-parse --abbrev-ref HEAD)
          # Convert to lowercase
          BRANCH_NAME=$(echo "$BRANCH_NAME" | tr '[:upper:]' '[:lower:]')
          # Replace unsupported characters with dashes
          BRANCH_NAME=$(echo "$BRANCH_NAME" | sed 's/[^a-z-]/-/g')
          # Replace multiple dashes with single dash
          BRANCH_NAME=$(echo "$BRANCH_NAME" | sed 's/-\+/-/g')
          # Truncate to 37 characters
          BRANCH_NAME=$(echo "$BRANCH_NAME" | cut -c1-37)
          # Remove trailing dash if present
          BRANCH_NAME=$(echo "$BRANCH_NAME" | sed 's/-$//g')
          # Set as output and environment variable
          echo "FORMATTED_BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_ENV
          echo "formatted_branch_name=$BRANCH_NAME" >> $GITHUB_OUTPUT
          echo "Formatted branch name: $BRANCH_NAME"
      - name: Publish to Chromatic
        id: chromatic
        uses: chromaui/action@latest
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          # ðŸ‘‡ Chromatic projectToken, refer to the manage page to obtain it.
          projectToken: ${{ secrets.CHROMATIC_PROJECT_TOKEN }}
          onlyChanged: true
          workingDir: packages/storybook
          skip: 'dependabot/**'
          branchName: ${{ env.FORMATTED_BRANCH_NAME }}
      - name: Publish Chromatic Summary
        run: echo -e "| Results |  |\n| --- | --- |\n| Build Results | ${{steps.chromatic.outputs.buildUrl}} |\n| Storybook Preview | ${{steps.chromatic.outputs.storybookUrl}} |\n| Change Count | ${{steps.chromatic.outputs.changeCount}} |" >> $GITHUB_STEP_SUMMARY
